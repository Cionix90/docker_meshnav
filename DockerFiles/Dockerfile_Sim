FROM osrf/ros:humble-desktop-full-jammy
ENV DEBIAN_FRONTEND=noninteractive
ENV GZ_VERSION=harmonic

# install ros2 dependecies
RUN apt-get update 
RUN apt-get install -y ros-humble-plotjuggler
RUN apt-get install -y ros-humble-ros-gz
RUN apt-get install -y \
    ros-humble-joint-state-publisher \
    ros-humble-joint-state-publisher-gui \
    ros-humble-teleop-twist-joy \
    ros-humble-joy \
    ros-humble-pinocchio \
    ros-humble-xacro \
    ros-humble-rosbag2-storage-mcap \
    ros-humble-plotjuggler-ros \
    pipx \
    chrony \
    tmux python3-pip\
    xterm \
    libeigen3-dev \
    nano \
    ros-humble-rviz2 \
    nautilus \ 
    iputils-ping \
    iproute2  \
    python3-rosdep \
    python3-vcstool \
    && apt-get clean
RUN apt-get install -y \
    ros-humble-rmw-cyclonedds-cpp \
    && apt-get clean


RUN apt-get install -y  curl lsb-release gnupg
RUN curl https://packages.osrfoundation.org/gazebo.gpg --output /usr/share/keyrings/pkgs-osrf-archive-keyring.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/pkgs-osrf-archive-keyring.gpg] http://packages.osrfoundation.org/gazebo/ubuntu-stable $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/gazebo-stable.list > /dev/null
RUN echo " CURL DONE"

RUN apt-get update 
RUN apt-get install -y ignition-fortress
RUN echo "Ignition Installed"
RUN apt-get update
RUN apt-get install -y wget
RUN apt-get upgrade -y



# create new user

ENV DEBIAN_FRONTEND=dialog

# Create a new user
ARG USERNAME=ros
ARG USER_UID=1000
ARG USER_GID=${USER_UID}
RUN if id -u ${USER_UID} ; then userdel `id -un ${USER_UID}` ; fi
RUN groupadd --gid ${USER_GID} ${USERNAME} 
RUN useradd --uid ${USER_UID} --gid ${USER_GID} -m ${USERNAME} \
    && apt-get update \
    && apt-get install -y sudo git \
    && echo ${USERNAME} ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/${USERNAME} \
    && chmod 0440 /etc/sudoers.d/${USERNAME}

#Change HOME environment variable
ENV HOME=/home/${USERNAME}
# Choose to run as user
ENV USER=${USERNAME}

USER ${USERNAME}

# install cuda 
WORKDIR /home/ros/
RUN sudo wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-ubuntu2204.pin
RUN sudo mv cuda-ubuntu2204.pin /etc/apt/preferences.d/cuda-repository-pin-600
RUN wget https://developer.download.nvidia.com/compute/cuda/12.2.0/local_installers/cuda-repo-ubuntu2204-12-2-local_12.2.0-535.54.03-1_amd64.deb
RUN sudo dpkg -i cuda-repo-ubuntu2204-12-2-local_12.2.0-535.54.03-1_amd64.deb
RUN sudo cp /var/cuda-repo-ubuntu2204-12-2-local/cuda-*-keyring.gpg /usr/share/keyrings/
RUN sudo apt-get update
RUN sudo apt-get -y install -y --no-install-recommends cuda-toolkit-12-2
RUN sudo apt-get update
RUN sudo apt-get install -y gcc-12 g++-12
RUN sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 120
RUN sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-12 120

ARG WORKSPACE=docker_meshnav_ws
WORKDIR /home/ros/${WORKSPACE}

RUN mkdir src

RUN cd /home/ros/${WORKSPACE}/src \
    && git clone https://github.com/naturerobots/mesh_navigation_tutorials.git \
    && git clone https://github.com/uos/rmcl.git \
    && git clone https://github.com/uos/rmagine.git \
    && vcs import --input mesh_navigation_tutorials/source_dependencies.yaml \
    && rosdep update \
    && rosdep install --from-paths . --ignore-src -r -y
    
RUN echo 'export PATH=/usr/local/cuda-12.2/bin${PATH:+:${PATH}}' >> ~/.bashrc
RUN echo 'export LD_LIBRARY_PATH=/usr/local/cuda-12.2/lib64\${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}' >> ~/.bashrc
RUN echo 'export CC=/usr/bin/gcc-12' >> ~/.bashrc
RUN echo 'export CXX=/usr/bin/g++-12' >> ~/.bashrc
RUN echo 'export CUDA_HOST_COMPILER=/usr/bin/g++-12' >> ~/.bashrc



ENTRYPOINT ["/ros_entrypoint.sh"]
